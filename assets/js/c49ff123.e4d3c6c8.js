"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4565],{4252:(e,t,n)=>{n(6540),n(5195)},5195:(e,t,n)=>{n.d(t,{A:()=>y});var a=n(8168),r=n(6540),o=n(6342);function i(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),n=Array(7).fill(-1);t.forEach(((e,t)=>{const a=n.slice(2,e.level);e.parentIndex=Math.max(...a),n[e.level]=t}));const a=[];return t.forEach((e=>{const{parentIndex:n,...r}=e;n>=0?t[n].children.push(r):a.push(r)})),a}function l({toc:e,minHeadingLevel:t,maxHeadingLevel:n}){return e.flatMap((e=>{const a=l({toc:e.children,minHeadingLevel:t,maxHeadingLevel:n});return function(e){return e.level>=t&&e.level<=n}(e)?[{...e,children:a}]:a}))}function s(e){const t=e.getBoundingClientRect();return t.top===t.bottom?s(e.parentNode):t}function p(e,{anchorTopOffset:t}){const n=e.find((e=>s(e).top>=t));if(n){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(n))?n:e[e.indexOf(n)-1]??null}return e[e.length-1]??null}function u(){const e=(0,r.useRef)(0),{navbar:{hideOnScroll:t}}=(0,o.p)();return(0,r.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function c(e){const t=(0,r.useRef)(void 0),n=u();(0,r.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:a,linkActiveClassName:r,minHeadingLevel:o,maxHeadingLevel:i}=e;function l(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(a),l=function({minHeadingLevel:e,maxHeadingLevel:t}){const n=[];for(let a=e;a<=t;a+=1)n.push(`h${a}.anchor`);return Array.from(document.querySelectorAll(n.join()))}({minHeadingLevel:o,maxHeadingLevel:i}),s=p(l,{anchorTopOffset:n.current}),u=e.find((e=>s&&s.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,n){n?(t.current&&t.current!==e&&t.current.classList.remove(r),e.classList.add(r),t.current=e):e.classList.remove(r)}(e,e===u)}))}return document.addEventListener("scroll",l),document.addEventListener("resize",l),l(),()=>{document.removeEventListener("scroll",l),document.removeEventListener("resize",l)}}),[e,n])}function d({toc:e,className:t,linkClassName:n,isChild:a}){return e.length?r.createElement("ul",{className:a?void 0:t},e.map((e=>r.createElement("li",{key:e.id},r.createElement("a",{href:`#${e.id}`,className:n??void 0,dangerouslySetInnerHTML:{__html:e.value}}),r.createElement(d,{isChild:!0,toc:e.children,className:t,linkClassName:n}))))):null}const m=r.memo(d);function y({toc:e,className:t="table-of-contents table-of-contents__left-border",linkClassName:n="table-of-contents__link",linkActiveClassName:s,minHeadingLevel:p,maxHeadingLevel:u,...d}){const y=(0,o.p)(),g=p??y.tableOfContents.minHeadingLevel,h=u??y.tableOfContents.maxHeadingLevel,f=function({toc:e,minHeadingLevel:t,maxHeadingLevel:n}){return(0,r.useMemo)((()=>l({toc:i(e),minHeadingLevel:t,maxHeadingLevel:n})),[e,t,n])}({toc:e,minHeadingLevel:g,maxHeadingLevel:h});return c((0,r.useMemo)((()=>{if(n&&s)return{linkClassName:n,linkActiveClassName:s,minHeadingLevel:g,maxHeadingLevel:h}}),[n,s,g,h])),r.createElement(m,(0,a.A)({toc:f,className:t,linkClassName:n},d))}},5496:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));n(1653),n(6025),n(4252);const o={title:"First App Deployment",slug:"/developers/deploy-first-app"},i=void 0,l={unversionedId:"developers/deploy-first-app",id:"developers/deploy-first-app",title:"First App Deployment",description:"Introduction",source:"@site/docs/developers/deploy-first-app.mdx",sourceDirName:"developers",slug:"/developers/deploy-first-app",permalink:"/developers/deploy-first-app",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/developers/deploy-first-app.mdx",tags:[],version:"current",frontMatter:{title:"First App Deployment",slug:"/developers/deploy-first-app"},sidebar:"docs",previous:{title:"Tokenomics",permalink:"/tokenomics"},next:{title:"How to run an LLM on Acurast",permalink:"/developers/llm-on-acurast"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting up the Project",id:"setting-up-the-project",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"Writing the code",id:"writing-the-code",level:3},{value:"Building the project",id:"building-the-project",level:3},{value:"Setting up the Acurast CLI",id:"setting-up-the-acurast-cli",level:2},{value:"Installation",id:"installation",level:3},{value:"Adding Acurast Config to the Project",id:"adding-acurast-config-to-the-project",level:3},{value:"Getting ready for Deployment",id:"getting-ready-for-deployment",level:3},{value:"Deploying the Application",id:"deploying-the-application",level:2},{value:"Verifying the Deployment",id:"verifying-the-deployment",level:2},{value:"Bonus: Working with Secret Environment Variables",id:"bonus-working-with-secret-environment-variables",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"More Examples",id:"more-examples",level:2}],u={toc:p},c="wrapper";function d({components:e,...t}){return(0,r.yg)(c,(0,a.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"introduction"},"Introduction"),(0,r.yg)("p",null,"This tutorial will guide you through deploying a simple application on Acurast. By the end of this guide, you'll have your first project ready and deployment up and running."),(0,r.yg)("iframe",{width:"100%",style:{"aspect-ratio":"368 / 239"},src:"https://www.youtube.com/embed/KSq-A-CJDyc",title:"Create your first Acurast Deployment",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0,webkitallowfullscreen:!0,mozallowfullscreen:!0}),(0,r.yg)("div",{class:"padding-vert--md"}),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"If you prefer to jump right in, you can take a look at one of the example projects:"),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/26ebfb27b1f0bdf4a146acafa792d47c155a34d5/apps/app-webserver"},"Express Server on Acurast")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/26ebfb27b1f0bdf4a146acafa792d47c155a34d5/apps/app-fetch"},"Fetch data from an API"),".")),(0,r.yg)("p",{parentName:"admonition"},"You can either clone those repositories, or set up a blank Acurast starter project by running ",(0,r.yg)("inlineCode",{parentName:"p"},"npx @acurast/cli new <project-name>"),".")),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Basic knowledge of Node.js and the Command Line")),(0,r.yg)("h2",{id:"setting-up-the-project"},"Setting up the Project"),(0,r.yg)("h3",{id:"project-structure"},"Project Structure"),(0,r.yg)("p",null,"The structure of a project looks exactly like a normal Node.js project:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\u251c\u2500\u2500 dist\n\u2502   \u2514\u2500\u2500 bundle.js\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 acurast.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 webpack.config.js\n")),(0,r.yg)("p",null,"There is only one file that is specific to Acurast: ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast.json"),". This file configures the deployment and is covered later in the tutorial."),(0,r.yg)("h3",{id:"writing-the-code"},"Writing the code"),(0,r.yg)("p",null,"First, let's start by creating a simple node.js project. You can find the code of the example, including all the build steps and configurations, on ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps/blob/26ebfb27b1f0bdf4a146acafa792d47c155a34d5/apps/app-webserver/"},"GitHub")),(0,r.yg)("p",null,'If you\'re interested only in the Acurast part of the tutorial, feel free to skip to the "Installing the Acurast CLI" step.'),(0,r.yg)("p",null,'This app is a simple Express server that returns a "Hello, World!" message. This is the code of the app:'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},'import express from "express";\nimport localtunnel from "localtunnel";\n\n/**\n * WARNING: This subdomain is NOT secure and should not be used in production.\n * Anyone can simply overwrite it with their own project and hijack requests\n * This is simply for testing purposes. If you need a secure way to host your\n * project, please reach out to us.\n */\nconst LOCALTUNNEL_SUBDOMAIN = ""; // This is the subdomain where your webserver will be available. Eg. https://example.acu.run\nconst LOCALTUNNEL_HOST = "https://proxy.acu.run/";\nconst LOCAL_PORT = 3000;\n\nif (!LOCALTUNNEL_SUBDOMAIN) {\n  console.log("LOCALTUNNEL_SUBDOMAIN must be set");\n  process.exit(1);\n}\n\nconst app = express();\napp.use(express.json());\n\napp.get("/", (req, res) => {\n  res.send(`<h1>Hello from Acurast!</h1>`);\n});\n\napp.listen(LOCAL_PORT, () =>\n  console.log(`Server listening on port ${LOCAL_PORT}!`)\n);\n\nconst startTunnel = async () => {\n  const tunnel = await localtunnel({\n    subdomain: LOCALTUNNEL_SUBDOMAIN,\n    host: LOCALTUNNEL_HOST,\n    port: LOCAL_PORT,\n  });\n\n  console.log("Tunnel started at", tunnel.url);\n};\n\nstartTunnel();\n')),(0,r.yg)("p",null,"This code starts a webserver using express on port 3000, then starts a localtunnel tunnel to make the server publicly available."),(0,r.yg)("p",null,"Set the ",(0,r.yg)("inlineCode",{parentName:"p"},"LOCALTUNNEL_SUBDOMAIN")," variable to specify where the server will be available. If set to ",(0,r.yg)("inlineCode",{parentName:"p"},"example"),", the URL will be ",(0,r.yg)("inlineCode",{parentName:"p"},"https://example.acu.run"),"."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"This localtunnel server is not secure and should not be used in production. Work is underway to make this secure by default, but if a secure way to host your project is needed now, please reach out via the community channels.")),(0,r.yg)("h3",{id:"building-the-project"},"Building the project"),(0,r.yg)("p",null,"To deploy a project to the Acurast Cloud, it needs to be bundled into a single js file. This example uses webpack. You can find the configuration in the example project on ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps/blob/26ebfb27b1f0bdf4a146acafa792d47c155a34d5/apps/app-webserver/"},"GitHub")),(0,r.yg)("p",null,"Running ",(0,r.yg)("inlineCode",{parentName:"p"},"npm run bundle")," will then output a single js file which includes all necessary dependencies."),(0,r.yg)("p",null,"The file is located in ",(0,r.yg)("inlineCode",{parentName:"p"},"dist/bundle.js"),". It includes your code, as well as all the dependencies in a single file."),(0,r.yg)("p",null,"This is the file that will be deployed to the Acurast Cloud. You can run it locally with ",(0,r.yg)("inlineCode",{parentName:"p"},"node dist/bundle.js")," to test it."),(0,r.yg)("h2",{id:"setting-up-the-acurast-cli"},"Setting up the Acurast CLI"),(0,r.yg)("p",null,"Now that the app is ready, the Acurast CLI needs to be set up. The CLI is a tool that allows you to deploy and manage your applications on the Acurast Cloud."),(0,r.yg)("h3",{id:"installation"},"Installation"),(0,r.yg)("p",null,"Let's install the Acurast CLI globally using npm:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install -g @acurast/cli\n")),(0,r.yg)("p",null,"To verify that the installation worked, you can run ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast")," in the terminal and it will show you the help page:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"tutorial % acurast\n     _                            _      ____ _     ___\n    / \\   ___ _   _ _ __ __ _ ___| |_   / ___| |   |_ _|\n   / _ \\ / __| | | | '__/ _` / __| __| | |   | |    | |\n  / ___ \\ (__| |_| | | | (_| \\__ \\ |_  | |___| |___ | |\n /_/   \\_\\___|\\__,_|_|  \\__,_|___/\\__|  \\____|_____|___|\n\nUsage: acurast [options] [command]\n\nA cli to interact with the Acurast Network.\n\nOptions:\n  -v, --version               output the version number\n  -h, --help                  display help for command\n\nCommands:\n  deploy [options] [project]  Deploy the current project to the Acurast platform.\n  init                        Create an acurast.json and .env file\n  live [options] [project]    Run the code in a live code environment on a remote processor\n  open                        Open Acurast websites in your browser\n  help [command]              display help for command\n")),(0,r.yg)("h3",{id:"adding-acurast-config-to-the-project"},"Adding Acurast Config to the Project"),(0,r.yg)("p",null,"The next step is to add the Acurast Config to the project. To do that, run the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"acurast init\n")),(0,r.yg)("p",null,"This will start an interactive guide, which will create ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast.json")," and ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," files."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},'tutorial % acurast init\nInitializing Acurast CLI\nThere is no .env file, creating one now...\n.env file created. Visit https://github.com/Acurast/acurast-cli to learn more.\n\nThe CLI will use the following address: 5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP\n\nVisit the faucet to get some tokens: https://faucet.acurast.com?address=5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP\n\nNo package.json file found. This is unusual. Are you sure you are in the right directory?\n? Enter the name of the project: tutorial\n? Should the app be run one time or in an interval? One Time\n? Enter the duration (eg. 1s, 5min or 2h): 1min\n? What is the bundled javascript file to run? dist/bundle.js\n\n\ud83c\udf89 Successfully created "acurast.json" and ".env" files\n\nYou can deploy your app using \'acurast deploy\'\n')),(0,r.yg)("p",null,"During the setup process, default values are set for most of the parameters, and they should work well for this example. You can always open the ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast.json")," file and change the configuration there. In the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-cli?tab=readme-ov-file#configuration-details"},"CLI Docs")," you will find more information about the possible configurations."),(0,r.yg)("p",null,"These are the files that were generated:"),(0,r.yg)("p",null,"acurast.json:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "projects": {\n    "tutorial": {\n      "projectName": "tutorial",\n      "fileUrl": "dist/bundle.js",\n      "network": "canary",\n      "onlyAttestedDevices": true,\n      "assignmentStrategy": {\n        "type": "Single"\n      },\n      "execution": {\n        "type": "onetime",\n        "maxExecutionTimeInMs": 3600000\n      },\n      "maxAllowedStartDelayInMs": 10000,\n      "usageLimit": {\n        "maxMemory": 0,\n        "maxNetworkRequests": 0,\n        "maxStorage": 0\n      },\n      "numberOfReplicas": 1,\n      "requiredModules": [],\n      "minProcessorReputation": 0,\n      "maxCostPerExecution": 1000000000,\n      "includeEnvironmentVariables": [],\n      "processorWhitelist": []\n    }\n  }\n}\n')),(0,r.yg)("p",null,".env:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"ACURAST_MNEMONIC=bounce crack ostrich put entry comic wage all tilt nature rebel position\n# ACURAST_IPFS_URL=\n# ACURAST_IPFS_API_KEY=\n")),(0,r.yg)("h3",{id:"getting-ready-for-deployment"},"Getting ready for Deployment"),(0,r.yg)("p",null,"To deploy the application, one more step is needed: getting some tokens from the faucet."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"[!TIP]","\nYou can import the mnemonic that was generated and stored in the .env file and import it in Talisman (Browser Extension) to access the same account in the ",(0,r.yg)("a",{parentName:"p",href:"https://hub.acurast.com/"},"Web Console"),".")),(0,r.yg)("p",null,"Let's get some tokens on your new account. You can run the ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast deploy")," command, which will check your balance, and displays the link to the Faucet page."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},'tutorial % acurast deploy\n\nDeploying project "tutorial"\n\nYour balance is 0. Visit https://faucet.acurast.com?address=5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP to get some tokens.\n')),(0,r.yg)("p",null,"Visit the link displayed in the CLI and follow the instructions to get some tokens. They should be available in a few seconds."),(0,r.yg)("p",null,"That's it! You're now ready to deploy your app."),(0,r.yg)("h2",{id:"deploying-the-application"},"Deploying the Application"),(0,r.yg)("p",null,"To deploy your application, run ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast deploy"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},'tutorial % acurast deploy\n\nDeploying project "tutorial"\n\nThe CLI will use the following address: 5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP\n\nThe deployment will be scheduled to start in 5 minutes 0 seconds.\n\nThere will be 1 executions with a cost of 0.001 cACU each.\n\n\u276f Deploying project (first execution scheduled in 246s)\n  \u2714 Submitted to Acurast (ipfs://Qmdk1zGq2h9SiMLUQN845rB9ii6YbpQXdFTHz3j8zXQp8C)\n  \u2714 Deployment registered (DeploymentID: 3,461)\n  \u2807 Waiting for deployment to be matched with processors\n  \u25fc Waiting for processor acknowledgements\n')),(0,r.yg)("p",null,"Congratulations, your deployment is now being registered in the network and executed soon! Check the CLI for more information about the deployment process."),(0,r.yg)("h2",{id:"verifying-the-deployment"},"Verifying the Deployment"),(0,r.yg)("p",null,"If you followed this tutorial, then your app will be available at ",(0,r.yg)("inlineCode",{parentName:"p"},"https://<your-subdomain>.acu.run"),'. ("\\<your-subdomain',">",'" is the value you set for ',(0,r.yg)("inlineCode",{parentName:"p"},"LOCALTUNNEL_SUBDOMAIN")," in the code)."),(0,r.yg)("p",null,"Success! You've successfully deployed your first application on Acurast!"),(0,r.yg)("h2",{id:"bonus-working-with-secret-environment-variables"},"Bonus: Working with Secret Environment Variables"),(0,r.yg)("p",null,"You can use secret environment variables in Acurast depoyments. The environment variables that are encrypted during deployment and only decrypted when the code is run on the processor. This is useful for storing sensitive information like API keys."),(0,r.yg)("p",null,"To use environment variables in your project, you first need to add them to the ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," file. For example, let's say you have an API key that you want to keep secret. You can add it to the ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," file like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"# .env\n\nAPI_KEY=your-api-key\n")),(0,r.yg)("p",null,"To configure which of your deployments make use of the environment variables, edit the ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast.json")," file and add all the environment variables to include in the deployment to the ",(0,r.yg)("inlineCode",{parentName:"p"},"includeEnvironmentVariables")," array."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "projects": {\n    "tutorial": {\n      "projectName": "tutorial",\n      "fileUrl": "dist/bundle.js",\n      "network": "canary",\n      "onlyAttestedDevices": true,\n      "assignmentStrategy": {\n        "type": "Single"\n      },\n      "execution": {\n        "type": "onetime",\n        "maxExecutionTimeInMs": 60000\n      },\n      "maxAllowedStartDelayInMs": 10000,\n      "usageLimit": {\n        "maxMemory": 0,\n        "maxNetworkRequests": 0,\n        "maxStorage": 0\n      },\n      "numberOfReplicas": 1,\n      "requiredModules": [],\n      "minProcessorReputation": 0,\n      "maxCostPerExecution": 1000000000,\n      "includeEnvironmentVariables": ["API_KEY"],\n      "processorWhitelist": []\n    }\n  }\n}\n')),(0,r.yg)("p",null,"Then, in your code, you can access the environment variables like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"const API_KEY = _STD_.env[API_KEY];\n")),(0,r.yg)("p",null,"When you run ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast deploy"),", the environment variables will now automatically be added to your deployment."),(0,r.yg)("p",null,"If you run an interval based deployment with multiple executions, then you can even update the environment variables between executions. This is useful if you want to rotate your API keys regularly. To do that, simply update the ",(0,r.yg)("inlineCode",{parentName:"p"},".env")," file and run ",(0,r.yg)("inlineCode",{parentName:"p"},"acurast deployments <id> -e"),". This will update the environment variables for the deployment with the given ID."),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"Congratulations! You've successfully deployed your first application on Acurast! For more advanced features and detailed documentation, refer to ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-cli/blob/main/README.md"},"Acurast CLI Documentation"),". Also make sure to join the Telegram or Discord to be part of the community!"),(0,r.yg)("h2",{id:"more-examples"},"More Examples"),(0,r.yg)("p",null,"For more inspiration, check out the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps"},"Acurast Examples")," with examples showing various features:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-env-vars"},"app-env-vars")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-external-dependencies"},"external-dependencies")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-fetch"},"fetch from API")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-heic-to-png"},"heic to png")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-puppeteer"},"puppeteer")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-telegram-bot"},"telegram-bot")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-wasm"},"wasm")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-webserver"},"webserver"))))}d.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(y,i(i({ref:t},u),{},{components:n})):a.createElement(y,i({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);