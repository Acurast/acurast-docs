"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[788],{5680:(e,t,a)=>{a.d(t,{xA:()=>h,yg:()=>d});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},h=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=c(a),u=r,d=p["".concat(l,".").concat(u)]||p[u]||m[u]||o;return a?n.createElement(d,s(s({ref:t},h),{},{components:a})):n.createElement(d,s({ref:t},h))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7902:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(8168),r=(a(6540),a(5680));const o={title:"Slashing",slug:"/staked-compute/slashing"},s=void 0,i={unversionedId:"staked-compute/slashing",id:"staked-compute/slashing",title:"Slashing",description:"The content on this page is currently under review and subject to change.",source:"@site/docs/staked-compute/slashing.mdx",sourceDirName:"staked-compute",slug:"/staked-compute/slashing",permalink:"/staked-compute/slashing",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/staked-compute/slashing.mdx",tags:[],version:"current",frontMatter:{title:"Slashing",slug:"/staked-compute/slashing"},sidebar:"docs",previous:{title:"Staking Mechanics",permalink:"/staked-compute/staking-mechanics"},next:{title:"Staking Mainnet vs. Canary",permalink:"/staked-compute/mainnet-vs-canary"}},l={},c=[{value:"How Slashing Works",id:"how-slashing-works",level:2},{value:"When Slashing Occurs",id:"when-slashing-occurs",level:3},{value:"How Penalties Are Calculated",id:"how-penalties-are-calculated",level:3},{value:"Slashing Examples",id:"slashing-examples",level:3},{value:"What Happens to Slashed Tokens",id:"what-happens-to-slashed-tokens",level:3},{value:"Slashing Impact",id:"slashing-impact",level:2}],h={toc:c},p="wrapper";function m({components:e,...t}){return(0,r.yg)(p,(0,n.A)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("admonition",{title:"Under Review",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"The content on this page is currently under review and subject to change.")),(0,r.yg)("h2",{id:"how-slashing-works"},"How Slashing Works"),(0,r.yg)("p",null,"Slashing is a penalty mechanism designed to ensure committers keep their promise of providing consistent compute power over time. If a committer fails to stay online or their measured compute in any of the four benchmark metrics falls below what they committed - for example, because phones went offline and were not replaced - their stake gets slashed in proportion to the shortfall. For instance, if a committer promised 100 GB of RAM but only delivers 80 GB, they will be slashed proportionally for that 20% shortfall in the RAM metric."),(0,r.yg)("p",null,"This mechanism incentivizes providers to actively maintain their deployed Acurast phones and farms, ensuring they're always running and replacing capacity with equally powerful devices when needed. Both the committer and their delegators share this risk, as slashing affects all staked tokens proportionally."),(0,r.yg)("h3",{id:"when-slashing-occurs"},"When Slashing Occurs"),(0,r.yg)("p",null,"When a committer's Current Compute falls below their Committed Compute in any of the four benchmark metrics during an epoch, they become slashable for that epoch. Slashing must be triggered on-chain by a ",(0,r.yg)("strong",{parentName:"p"},"Slasher"),"- anyone with an Acurast account who detects the violation."),(0,r.yg)("h3",{id:"how-penalties-are-calculated"},"How Penalties Are Calculated"),(0,r.yg)("p",null,"Once slashing is triggered, penalties are calculated independently for each Benchmark Metric where there's a shortfall. The slashing amount for each metric is determined by multiplying the stake amount by the maximum slash rate (0.003424657534% per epoch), the metric's weight, and the percentage shortfall."),(0,r.yg)("p",null,"For example, if a committer with a 1,000-token stake falls 50% short on RAM (which has a weight of 0.4615), they would be slashed 0.0079 tokens for that metric alone. If they have shortfalls across multiple metrics, each penalty is calculated separately and then summed together - though the total can never exceed 0.003424657534% of the stake per epoch."),(0,r.yg)("h3",{id:"slashing-examples"},"Slashing Examples"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Example 1: Complete Loss of Compute")),(0,r.yg)("p",null,"A committer has a 1,000-token stake. In an observed epoch, their Current Compute falls 100% short in all four metrics (CPU Single, CPU Multi, RAM, and Storage). Since they failed to provide any of their committed compute, they face the maximum penalty of 0.003424657534% of their stake per epoch, resulting in a total slash of 0.0342 tokens for this epoch. This breaks down as: 0.0079 tokens for CPU Single Core, 0.0079 tokens for CPU Multi Core, 0.0158 tokens for RAM, and 0.0026 tokens for Storage."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Example 2 (fictional): Partial Loss of exactly 50% Across All Metrics")),(0,r.yg)("p",null,"A committer has a 1,000-token stake. In an observed epoch, their compute falls 50% short across all four metrics. They are slashed proportionally for this epoch: 0.0040 tokens for CPU Single Core, 0.0040 tokens for CPU Multi Core, 0.0079 tokens for RAM, and 0.0013 tokens for Storage - totaling 0.0171 tokens (0.00171% of their stake per epoch)."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Example 3 (realistic): Variable Shortfalls")),(0,r.yg)("p",null,"A committer has a 1,000-token stake. In an observed epoch, their compute falls short by different amounts: 12% in CPU Single Core, 15% in CPU Multi Core, 10% in RAM, and 12% in Storage. The resulting penalties for this epoch are: 0.000948 tokens for CPU Single Core, 0.001185 tokens for CPU Multi Core, 0.001580 tokens for RAM, and 0.000316 tokens for Storage - totaling approximately 0.0040 tokens slashed for this epoch."),(0,r.yg)("h3",{id:"what-happens-to-slashed-tokens"},"What Happens to Slashed Tokens"),(0,r.yg)("p",null,"Of the slashed amount, 10% goes to the Slasher as a reward for detecting the violation, while the remaining 90% is immediately burned, reducing total supply and inflation."),(0,r.yg)("h2",{id:"slashing-impact"},"Slashing Impact"),(0,r.yg)("p",null,"Importantly, committers still earn rewards for any metrics where they met their commitment; only metrics with shortfalls result in slashing. This means partial performance is still rewarded, while failures are penalized proportionally."),(0,r.yg)("p",null,"Just as rewards flow from committers to their delegators, slashing penalties also affect delegators proportionally based on their stake. When a committer is slashed, each delegator loses the same percentage of their delegated stake as the committer loses from their own stake. However, delegators can redelegate to another committer at any time if they're concerned about their chosen committer's performance."))}m.isMDXComponent=!0}}]);