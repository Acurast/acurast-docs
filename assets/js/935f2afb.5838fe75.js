"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Real Decentralized Compute Network","href":"/","docId":"introduction"},{"type":"link","label":"Roadmap","href":"/roadmap","docId":"roadmap"},{"type":"link","label":"Tokenomics","href":"/tokenomics","docId":"tokenomics"},{"type":"category","label":"Developers","items":[{"type":"link","label":"First App Deployment","href":"/developers/deploy-first-app","docId":"developers/deploy-first-app"},{"type":"link","label":"How to run an LLM on Acurast","href":"/developers/llm-on-acurast","docId":"developers/llm-on-acurast"},{"type":"link","label":"Deployment Runtime Environment","href":"/developers/deployment-runtime-environment","docId":"developers/deployment-runtime-environment"},{"type":"link","label":"Deployments On Demand","href":"/developers/on-demand-deployments","docId":"developers/on-demand-deployments"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Processors","items":[{"type":"link","label":"Become a Compute Provider","href":"/processors/become-compute-provider","docId":"processors/become-compute-provider"},{"type":"link","label":"Run Multiple Processors (Farms)","href":"/acurast-Processors/multiple-processors","docId":"processors/multiple-processors"},{"type":"link","label":"Processor Lite and Core","href":"/acurast-processors","docId":"processors/acurast-processors"},{"type":"link","label":"Processor Rewards","href":"/processors/rewards","docId":"processors/rewards"},{"type":"link","label":"Benchmarks","href":"/acurast-processors/benchmarks","docId":"processors/benchmarks"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Staked Compute","items":[{"type":"link","label":"Overview","href":"/staked-compute/overview","docId":"staked-compute/overview"},{"type":"link","label":"Staking Mechanics","href":"/staked-compute/staking-mechanics","docId":"staked-compute/staking-mechanics"},{"type":"link","label":"Slashing","href":"/staked-compute/slashing","docId":"staked-compute/slashing"},{"type":"link","label":"Staking Mainnet vs. Canary","href":"/staked-compute/mainnet-vs-canary","docId":"staked-compute/mainnet-vs-canary"},{"type":"link","label":"Staking FAQ","href":"/staked-compute/staking-faq","docId":"staked-compute/staking-faq"},{"type":"link","label":"Staking Glossary","href":"/staked-compute/staking-glossary","docId":"staked-compute/staking-glossary"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Acurast Protocol","items":[{"type":"link","label":"Acurast Orchestrator","href":"/acurast-orchestrator","docId":"acurast-orchestrator"},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Overview","href":"/acurast-protocol/architecture/architecture","docId":"acurast-protocol/architecture/architecture"},{"type":"link","label":"End-to-End Deployment Execution","href":"/acurast-protocol/architecture/end-to-end","docId":"acurast-protocol/architecture/end-to-end"},{"type":"link","label":"Application Layer","href":"/acurast-protocol/architecture/application-layer","docId":"acurast-protocol/architecture/application-layer"},{"type":"link","label":"Execution Layer","href":"/acurast-protocol/architecture/execution-layer","docId":"acurast-protocol/architecture/execution-layer"},{"type":"link","label":"Consensus Layer","href":"/acurast-protocol/architecture/consensus-layer","docId":"acurast-protocol/architecture/consensus-layer"},{"type":"link","label":"Instances","href":"/acurast-protocol/architecture/instances","docId":"acurast-protocol/architecture/instances"}],"collapsed":false,"collapsible":true},{"type":"link","label":"Node Setup","href":"/acurast-protocol/node-setup","docId":"acurast-protocol/node-setup"},{"type":"link","label":"Ecosystems & Integrations","href":"/integrations","docId":"integrations"},{"type":"link","label":"Networks","href":"/networks","docId":"networks"},{"type":"link","label":"Audits","href":"/audits","docId":"audits"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Wallets","items":[{"type":"link","label":"Overview","href":"/wallets/wallet-overview","docId":"wallets/wallet-overview"},{"type":"link","label":"SubWallet","href":"/wallets/wallets-subwallet","docId":"wallets/wallets-subwallet"},{"type":"link","label":"Talisman","href":"/wallets/wallets-talisman","docId":"wallets/wallets-talisman"},{"type":"link","label":"Ledger","href":"/wallets/wallets-ledger","docId":"wallets/wallets-ledger"},{"type":"link","label":"AirGap","href":"/wallets/wallets-airgap","docId":"wallets/wallets-airgap"}],"collapsed":true,"collapsible":true},{"type":"link","label":"FAQ","href":"/faq","docId":"faq"}]},"docs":{"acurast-orchestrator":{"id":"acurast-orchestrator","title":"Acurast Orchestrator","description":"The Acurast Orchestrator is a centerpiece of the consensus layer, combining the orchestration (i.e., the scheduling of deployments and enabling the liquid matching) of the Processor\u2019s computational resources and Developers. The orchestrator plays an essential role in the definition, agreement, and enforcement of value exchange between processors and developers.","sidebar":"docs"},"acurast-protocol/architecture/application-layer":{"id":"acurast-protocol/architecture/application-layer","title":"Application Layer","description":"In the Internet of today, almost every application relies heavily on auxiliary systems. Whether external APIs are used for authentication, basic infrastructure (hosting), data availability, reliance, which can benefit from extending or replacing services and core elements with confidential applications, essentially eliminating a host of threat events. The possibilities with Acurast are near-endless since today\'s centralized Internet is heavily centralized both logically and in terms of trust anchors.","sidebar":"docs"},"acurast-protocol/architecture/architecture":{"id":"acurast-protocol/architecture/architecture","title":"Overview","description":"Acurast separates the consensus, execution, and application layer (c.f., Fig. 1).","sidebar":"docs"},"acurast-protocol/architecture/consensus-layer":{"id":"acurast-protocol/architecture/consensus-layer","title":"Consensus Layer","description":"The Permissionless Consensus layer forms the base of the Acurast protocol and is based on a variant of the Nominated Proof-of-Stake (NPoS) algorithm [1]. Unlike traditional Proof-of-Stake (PoS) networks, there are validators and nominators in NPoS. Block validators verify transactions to be included in the next block, similar to traditional PoS block validators. The key difference is that instead of being randomly chosen, the validator nodes are nominated by another node.","sidebar":"docs"},"acurast-protocol/architecture/end-to-end":{"id":"acurast-protocol/architecture/end-to-end","title":"End-to-End Deployment Execution","description":"Acurast introduces a paradigm shift in verifiable and confidential computation, advancing the way decentralized applications are developed and deployed. To emphasize the inner workings of Acurast, the following description follows a deployment from definition and deployment to completion (c.f., Fig. 1).","sidebar":"docs"},"acurast-protocol/architecture/execution-layer":{"id":"acurast-protocol/architecture/execution-layer","title":"Execution Layer","description":"Acurast\'s execution layer is modular, allowing the flexible selection of runtimes according to the requirements of the use-case and the deployment, respectively. Decoupling the execution layer from the consensus and application layer allows the long-term evolution of runtimes, avoiding dependency lock-ins. Additionally, it ensures the highest level of service and confidentiality because security models can iteratively evolve with upgrades as novel threats emerge or new requirements arise.","sidebar":"docs"},"acurast-protocol/architecture/instances":{"id":"acurast-protocol/architecture/instances","title":"Instances","description":"Acurast will bootstrap three distinct networks: (a) the Acurast Testnet, (b) the Acurast Canary, and (c) the Acurast Mainnet.","sidebar":"docs"},"acurast-protocol/collator-onboarding":{"id":"acurast-protocol/collator-onboarding","title":"Acurast Collator Onboarding","description":"This page describes the steps to take to onboard a collator on the Acurast Canary chain."},"acurast-protocol/node-setup":{"id":"acurast-protocol/node-setup","title":"Node Setup","description":"The recommended way to run the Acurast node is by using the published Docker image.","sidebar":"docs"},"audits":{"id":"audits","title":"Audits","description":"Security is a top priority for Acurast. Regular security audits are conducted security to ensure the safety and reliability the Acurast protocol, its components and infrastructure.","sidebar":"docs"},"developers/create-address":{"id":"developers/create-address","title":"Create Address","description":"This guide explains how to create an address with Talisman wallet. To install the browser extensions, follow their setup instructions or checkout their walkshrough video."},"developers/deploy-first-app":{"id":"developers/deploy-first-app","title":"First App Deployment","description":"Introduction","sidebar":"docs"},"developers/deploy-first-app-quest":{"id":"developers/deploy-first-app-quest","title":"First App Deployment (Hub)","description":"Introduction"},"developers/deployment-runtime-environment":{"id":"developers/deployment-runtime-environment","title":"Deployment Runtime Environment","description":"The deployment\'s script running on Processors has access to the following a set of APIs.","sidebar":"docs"},"developers/llm-on-acurast":{"id":"developers/llm-on-acurast","title":"How to run an LLM on Acurast","description":"Introduction","sidebar":"docs"},"developers/on-demand-deployments":{"id":"developers/on-demand-deployments","title":"Deployments On Demand","description":"On demand deployments are special kind of deployments that can be used to access a processor on demand from a dapp. This is achieved by having the deployment open a websocket connection to the acurast websocket service and setup handlers to process incoming messages.","sidebar":"docs"},"faq":{"id":"faq","title":"FAQ","description":"Overall","sidebar":"docs"},"incidents/post-mortem-20251104":{"id":"incidents/post-mortem-20251104","title":"Post Mortem - 2025-11-04 - Acurast Canary chain stalled","description":"Post Mortem"},"integrations":{"id":"integrations","title":"Ecosystems & Integrations","description":"Acurast is built with interoperability at its core and is able to support various Web3 ecosystems and has multiple ways of being integrated within various environments such as EVM, WASM, Substrate and others.","sidebar":"docs"},"introduction":{"id":"introduction","title":"Real Decentralized Compute Network","description":"Acurast is the Real Decentralized Compute Network \u2014 Scalable, Secure, and Powered by Phones.","sidebar":"docs"},"networks":{"id":"networks","title":"Networks","description":"A list of all related core infrastrucuture for each deployed Acurast network. More details on the functionalities of each network can be found in the Protocol Architecture \u2197","sidebar":"docs"},"processors/acurast-processors":{"id":"processors/acurast-processors","title":"Processor Lite and Core","description":"The Acurast processor is the app that is running on smartphones which take part in the Acurast Decentralized Compute Network. Acurast Processors are the infrastructure providers for Acurast\'s decentralized compute network. Processors provide the compute power of their phone and are used by developers to run their Deployments.","sidebar":"docs"},"processors/become-compute-provider":{"id":"processors/become-compute-provider","title":"Become an Acurast Compute Provider","description":"Join Acurast\'s decentralized compute network and start receiving rewards by providing compute power with your smartphone. This guide will walk you through everything you need to get started as a Compute Provider.","sidebar":"docs"},"processors/benchmarks":{"id":"processors/benchmarks","title":"Benchmarks","description":"Benchmark tests on Acurast phones are vital to determine the compute power of the participating devices. The compute metrics determined by these benchmark tests are relevant for matching phones to the right tasks based on their capabilities, calculating benchmark rewards distributed for the provision of phones, and determining staked compute rewards. Better hardware usually leads to a higher benchmark score.","sidebar":"docs"},"processors/multiple-processors":{"id":"processors/multiple-processors","title":"Run Multiple Processors (Farms)","description":"Running multiple Acurast Processors","sidebar":"docs"},"processors/rewards":{"id":"processors/rewards","title":"Processor Rewards","description":"As a Compute Provider running Acurast Processors, you receive rewards for contributing your device\'s compute power to the network. The reward system is designed to incentivize reliable compute provision, high-quality hardware, and active participation in the Acurast ecosystem.","sidebar":"docs"},"roadmap":{"id":"roadmap","title":"Roadmap","description":"<ThemedImage","sidebar":"docs"},"staked-compute":{"id":"staked-compute","title":"Staked Compute","description":"The specifics on this page are currently under review and subject to change."},"staked-compute/mainnet-vs-canary":{"id":"staked-compute/mainnet-vs-canary","title":"Staking Mainnet vs. Canary","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"staked-compute/overview":{"id":"staked-compute/overview","title":"Overview","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"staked-compute/slashing":{"id":"staked-compute/slashing","title":"Slashing","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"staked-compute/staking-faq":{"id":"staked-compute/staking-faq","title":"Staking FAQ","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"staked-compute/staking-glossary":{"id":"staked-compute/staking-glossary","title":"Staking Glossary","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"staked-compute/staking-mechanics":{"id":"staked-compute/staking-mechanics","title":"Staking Mechanics","description":"The content on this page is currently under review and subject to change.","sidebar":"docs"},"tokenomics":{"id":"tokenomics","title":"Tokenomics","description":"The specifics on this page are currently under review and subject to change.","sidebar":"docs"},"wallets/wallet-overview":{"id":"wallets/wallet-overview","title":"Wallets","description":"A non exhaustive list of wallets supporting Acurast:","sidebar":"docs"},"wallets/wallets-airgap":{"id":"wallets/wallets-airgap","title":"AirGap Wallet","description":"AirGap Wallet can currently only be used to track the balance of an Acurast account, not to connect to the Acurast Hub or to sign transactions. The AirGap team is currently implementing signing and connections to the Hub.","sidebar":"docs"},"wallets/wallets-ledger":{"id":"wallets/wallets-ledger","title":"Ledger Hardware Wallet","description":"Create an Acurast address with Ledger (and SubWallet)","sidebar":"docs"},"wallets/wallets-subwallet":{"id":"wallets/wallets-subwallet","title":"SubWallet","description":"This guide explains how to create an address with SubWallet. SubWallet is a comprehensive non-custodial wallet for Polkadot, Substrate, and Ethereum ecosystems.","sidebar":"docs"},"wallets/wallets-talisman":{"id":"wallets/wallets-talisman","title":"Talisman","description":"This guide explains how to create an address with Talisman wallet. To install the browser extensions, follow their setup instructions.","sidebar":"docs"}}}')}}]);