"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1530],{1179:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(8168),o=(n(6540),n(5680));n(1653),n(6025),n(4252);const r={title:"How to run an LLM on Acurast",slug:"/developers/llm-on-acurast"},l=void 0,i={unversionedId:"developers/llm-on-acurast",id:"developers/llm-on-acurast",title:"How to run an LLM on Acurast",description:"Introduction",source:"@site/docs/developers/llm-on-acurast.mdx",sourceDirName:"developers",slug:"/developers/llm-on-acurast",permalink:"/developers/llm-on-acurast",draft:!1,editUrl:"https://github.com/acurast/acurast-docs/docs/developers/llm-on-acurast.mdx",tags:[],version:"current",frontMatter:{title:"How to run an LLM on Acurast",slug:"/developers/llm-on-acurast"},sidebar:"docs",previous:{title:"First App Deployment",permalink:"/developers/deploy-first-app"},next:{title:"Deployment Runtime Environment",permalink:"/developers/deployment-runtime-environment"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting up the Project",id:"setting-up-the-project",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"Writing the code",id:"writing-the-code",level:3},{value:"Building the project",id:"building-the-project",level:3},{value:"Setting up the Acurast CLI",id:"setting-up-the-acurast-cli",level:2},{value:"Installation",id:"installation",level:3},{value:"Adding Acurast Config to the Project",id:"adding-acurast-config-to-the-project",level:3},{value:"Getting ready for Deployment",id:"getting-ready-for-deployment",level:3},{value:"Deploying the Application",id:"deploying-the-application",level:2},{value:"Verifying the Deployment",id:"verifying-the-deployment",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"More Examples",id:"more-examples",level:2}],c={toc:p},u="wrapper";function d({components:e,...t}){return(0,o.yg)(u,(0,a.A)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"introduction"},"Introduction"),(0,o.yg)("p",null,"This tutorial walks you through deploying and running an LLM on Acurast."),(0,o.yg)("p",null,"Acurast includes a module for running LLMs. Most models from ",(0,o.yg)("a",{parentName:"p",href:"https://huggingface.co/"},"Hugging Face")," in the ",(0,o.yg)("inlineCode",{parentName:"p"},"GGUF")," format are supported."),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"If you prefer to jump right in, you can take a look at the example project:"),(0,o.yg)("ul",{parentName:"admonition"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-llm"},"LLMs on Acurast"))),(0,o.yg)("p",{parentName:"admonition"},"You can either clone the repository, or set up a blank Acurast starter project by running ",(0,o.yg)("inlineCode",{parentName:"p"},"npx @acurast/cli new <project-name>"),".")),(0,o.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Basic knowledge of Node.js and the Command Line")),(0,o.yg)("h2",{id:"setting-up-the-project"},"Setting up the Project"),(0,o.yg)("h3",{id:"project-structure"},"Project Structure"),(0,o.yg)("p",null,"The structure of a project looks exactly like a normal Node.js project:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"\u251c\u2500\u2500 dist\n\u2502   \u2514\u2500\u2500 bundle.js\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 acurast.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 tsconfig.json\n\u2514\u2500\u2500 webpack.config.js\n")),(0,o.yg)("p",null,"There is only one file that is specific to Acurast: ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast.json"),". This file configures the deployment and is covered later in the tutorial."),(0,o.yg)("h3",{id:"writing-the-code"},"Writing the code"),(0,o.yg)("p",null,"First, let's start by creating a simple node.js project. You can find the code of the example, including all the build steps and configurations, on ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-llm"},"GitHub")),(0,o.yg)("p",null,"The app will host a local LLM server and make it available over HTTP."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},'import path from "path";\nimport {\n  MODEL_URL,\n  MODEL_NAME,\n  STORAGE_DIR,\n  LOCALTUNNEL_HOST,\n} from "./constants";\nimport { createWriteStream, existsSync } from "fs";\nimport { Readable } from "stream";\nimport { finished } from "stream/promises";\nimport localtunnel from "localtunnel";\n\ndeclare let _STD_: any;\n\nconst MODEL_FILE = path.resolve(STORAGE_DIR, MODEL_NAME);\nasync function downloadModel(url: string, dst: string) {\n  console.log("Downloading model", MODEL_NAME);\n  const res = await fetch(url);\n\n  if (!res.body) {\n    throw new Error("No response body");\n  }\n\n  console.log("Writing model to file:", dst);\n  const writer = createWriteStream(dst);\n  await finished(Readable.fromWeb(res.body as any).pipe(writer));\n}\nasync function main() {\n  if (!existsSync(MODEL_FILE)) {\n    await downloadModel(MODEL_URL, MODEL_FILE);\n  } else {\n    console.log("Using already downloaded model:", MODEL_FILE);\n  }\n  console.log("model downloaded");\n\n  _STD_.llama.server.start(\n    ["--model", MODEL_FILE, "--ctx-size", "2048", "--threads", "8"],\n    () => {\n      // onCompletion\n      console.log("Llama server closed.");\n    },\n    (error: any) => {\n      // onError\n      console.log("Llama server error:", error);\n      throw error;\n    }\n  );\n  const tunnel = await localtunnel({\n    port: 8080,\n    host: LOCALTUNNEL_HOST,\n    subdomain: _STD_.device.getAddress().toLowerCase(),\n  });\n\n  console.log(tunnel.url);\n}\n\nmain();\n')),(0,o.yg)("p",null,"This code first downloads a model from Hugging Face, then starts the integrated LLM server and loads it. Finally, it uses localtunnel to make the server publicly available."),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"The API is compatible with the ",(0,o.yg)("a",{parentName:"p",href:"https://lmstudio.ai/docs/basics/server#openai-like-api-endpoints"},"OpenAI-like API endpoints"))),(0,o.yg)("p",null,"Set the ",(0,o.yg)("inlineCode",{parentName:"p"},"LOCALTUNNEL_SUBDOMAIN")," variable to specify where the server will be available. If set to ",(0,o.yg)("inlineCode",{parentName:"p"},"llm"),", the URL will be ",(0,o.yg)("inlineCode",{parentName:"p"},"https://llm.acu.run"),"."),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"This localtunnel server is not secure and should not be used in production. Work is underway to make this secure by default, but if a secure way to host your project is needed now, please reach out via the community channels.")),(0,o.yg)("h3",{id:"building-the-project"},"Building the project"),(0,o.yg)("p",null,"To deploy a project to the Acurast Cloud, it needs to be bundled into a single js file. This example uses webpack. You can find the configuration in the example project on ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps/blob/main/apps/app-llm/"},"GitHub")),(0,o.yg)("p",null,"Running ",(0,o.yg)("inlineCode",{parentName:"p"},"npm run bundle")," will then output a single js file which includes all necessary dependencies."),(0,o.yg)("p",null,"The file is located in ",(0,o.yg)("inlineCode",{parentName:"p"},"dist/bundle.js"),". It includes your code, as well as all the dependencies in a single file."),(0,o.yg)("p",null,"This is the file that will be deployed to the Acurast Cloud."),(0,o.yg)("h2",{id:"setting-up-the-acurast-cli"},"Setting up the Acurast CLI"),(0,o.yg)("p",null,"Now that the app is ready, the Acurast CLI needs to be set up. The CLI is a tool that allows you to deploy and manage your applications on the Acurast Cloud."),(0,o.yg)("h3",{id:"installation"},"Installation"),(0,o.yg)("p",null,"Let's install the Acurast CLI globally using npm:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"npm install -g @acurast/cli\n")),(0,o.yg)("p",null,"To verify that the installation worked, you can run ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast")," in the terminal and it will show you the help page:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},"tutorial % acurast\n     _                            _      ____ _     ___\n    / \\   ___ _   _ _ __ __ _ ___| |_   / ___| |   |_ _|\n   / _ \\ / __| | | | '__/ _` / __| __| | |   | |    | |\n  / ___ \\ (__| |_| | | | (_| \\__ \\ |_  | |___| |___ | |\n /_/   \\_\\___|\\__,_|_|  \\__,_|___/\\__|  \\____|_____|___|\n\nUsage: acurast [options] [command]\n\nA cli to interact with the Acurast Network.\n\nOptions:\n  -v, --version               output the version number\n  -h, --help                  display help for command\n\nCommands:\n  deploy [options] [project]  Deploy the current project to the Acurast platform.\n  init                        Create an acurast.json and .env file\n  live [options] [project]    Run the code in a live code environment on a remote processor\n  open                        Open Acurast websites in your browser\n  help [command]              display help for command\n")),(0,o.yg)("h3",{id:"adding-acurast-config-to-the-project"},"Adding Acurast Config to the Project"),(0,o.yg)("p",null,"The next step is to add the Acurast Config to the project. To do that, run the following command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"acurast init\n")),(0,o.yg)("p",null,"This will start an interactive guide, which will create an ",(0,o.yg)("inlineCode",{parentName:"p"},".env")," file."),(0,o.yg)("p",null,"If you checked out the sample project, the ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast.json")," already exists, so this step will be skipped. You can open the ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast.json")," file and change the configuration there. In the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-cli?tab=readme-ov-file#configuration-details"},"CLI Docs")," you will find more information about the possible configurations."),(0,o.yg)("h3",{id:"getting-ready-for-deployment"},"Getting ready for Deployment"),(0,o.yg)("p",null,"To deploy the application, one more step is needed: getting some tokens from the faucet."),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},"[!TIP]","\nYou can import the mnemonic that was generated and stored in the .env file and import it in Talisman (Browser Extension) to access the same account in the ",(0,o.yg)("a",{parentName:"p",href:"https://hub.acurast.com/"},"Web Console"),".")),(0,o.yg)("p",null,"Let's get some tokens on your new account. You can run the ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast deploy")," command, which will check your balance, and displays the link to the Faucet page."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},'tutorial % acurast deploy --dry-run\n\nDeploying project "app-llm"\n\nYour balance is 0. Visit https://faucet.acurast.com?address=5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP to get some tokens.\n')),(0,o.yg)("p",null,"Visit the link displayed in the CLI and follow the instructions to get some tokens. They should be available in a few seconds."),(0,o.yg)("p",null,"That's it! You're now ready to deploy your app."),(0,o.yg)("h2",{id:"deploying-the-application"},"Deploying the Application"),(0,o.yg)("p",null,"To deploy your application, run ",(0,o.yg)("inlineCode",{parentName:"p"},"acurast deploy"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},'tutorial % acurast deploy\n\nDeploying project "tutorial"\n\nThe CLI will use the following address: 5GNimXAQhayQq8m8SxJt3xQmG2L3pGzeTkHopx9iPnrS6uHP\n\nThe deployment will be scheduled to start in 5 minutes 0 seconds.\n\nThere will be 1 executions with a cost of 0.001 cACU each.\n\n\u276f Deploying project (first execution scheduled in 246s)\n  \u2714 Submitted to Acurast (ipfs://...)\n  \u2714 Deployment registered (DeploymentID: ...)\n  \u2807 Waiting for deployment to be matched with processors\n  \u25fc Waiting for processor acknowledgements\n')),(0,o.yg)("p",null,"Congratulations, your deployment is now being registered in the network and executed soon! Check the CLI for more information about the deployment process."),(0,o.yg)("h2",{id:"verifying-the-deployment"},"Verifying the Deployment"),(0,o.yg)("p",null,"If you followed this tutorial, then your app will be available at ",(0,o.yg)("inlineCode",{parentName:"p"},"https://<your-subdomain>.acu.run"),'. ("\\<your-subdomain',">",'" is the value you set for ',(0,o.yg)("inlineCode",{parentName:"p"},"LOCALTUNNEL_SUBDOMAIN")," in the code)."),(0,o.yg)("p",null,"Success! You've successfully deployed your first application on Acurast!"),(0,o.yg)("h2",{id:"conclusion"},"Conclusion"),(0,o.yg)("p",null,"Congratulations! You've successfully deployed your first application on Acurast! For more advanced features and detailed documentation, refer to ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-cli/blob/main/README.md"},"Acurast CLI Documentation"),". Also make sure to join the Telegram or Discord to be part of the community!"),(0,o.yg)("h2",{id:"more-examples"},"More Examples"),(0,o.yg)("p",null,"For more inspiration, check out the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Acurast/acurast-example-apps"},"Acurast Examples")," with examples showing various features:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-env-vars"},"app-env-vars")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-external-dependencies"},"external-dependencies")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-fetch"},"fetch from API")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-heic-to-png"},"heic to png")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-puppeteer"},"puppeteer")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-telegram-bot"},"telegram-bot")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-wasm"},"wasm")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://github.com/Acurast/acurast-example-apps/tree/main/apps/app-webserver"},"webserver"))))}d.isMDXComponent=!0},4252:(e,t,n)=>{n(6540),n(5195)},5195:(e,t,n)=>{n.d(t,{A:()=>g});var a=n(8168),o=n(6540),r=n(6342);function l(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),n=Array(7).fill(-1);t.forEach(((e,t)=>{const a=n.slice(2,e.level);e.parentIndex=Math.max(...a),n[e.level]=t}));const a=[];return t.forEach((e=>{const{parentIndex:n,...o}=e;n>=0?t[n].children.push(o):a.push(o)})),a}function i({toc:e,minHeadingLevel:t,maxHeadingLevel:n}){return e.flatMap((e=>{const a=i({toc:e.children,minHeadingLevel:t,maxHeadingLevel:n});return function(e){return e.level>=t&&e.level<=n}(e)?[{...e,children:a}]:a}))}function s(e){const t=e.getBoundingClientRect();return t.top===t.bottom?s(e.parentNode):t}function p(e,{anchorTopOffset:t}){const n=e.find((e=>s(e).top>=t));if(n){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(n))?n:e[e.indexOf(n)-1]??null}return e[e.length-1]??null}function c(){const e=(0,o.useRef)(0),{navbar:{hideOnScroll:t}}=(0,r.p)();return(0,o.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function u(e){const t=(0,o.useRef)(void 0),n=c();(0,o.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:a,linkActiveClassName:o,minHeadingLevel:r,maxHeadingLevel:l}=e;function i(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(a),i=function({minHeadingLevel:e,maxHeadingLevel:t}){const n=[];for(let a=e;a<=t;a+=1)n.push(`h${a}.anchor`);return Array.from(document.querySelectorAll(n.join()))}({minHeadingLevel:r,maxHeadingLevel:l}),s=p(i,{anchorTopOffset:n.current}),c=e.find((e=>s&&s.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,n){n?(t.current&&t.current!==e&&t.current.classList.remove(o),e.classList.add(o),t.current=e):e.classList.remove(o)}(e,e===c)}))}return document.addEventListener("scroll",i),document.addEventListener("resize",i),i(),()=>{document.removeEventListener("scroll",i),document.removeEventListener("resize",i)}}),[e,n])}function d({toc:e,className:t,linkClassName:n,isChild:a}){return e.length?o.createElement("ul",{className:a?void 0:t},e.map((e=>o.createElement("li",{key:e.id},o.createElement("a",{href:`#${e.id}`,className:n??void 0,dangerouslySetInnerHTML:{__html:e.value}}),o.createElement(d,{isChild:!0,toc:e.children,className:t,linkClassName:n}))))):null}const m=o.memo(d);function g({toc:e,className:t="table-of-contents table-of-contents__left-border",linkClassName:n="table-of-contents__link",linkActiveClassName:s,minHeadingLevel:p,maxHeadingLevel:c,...d}){const g=(0,r.p)(),h=p??g.tableOfContents.minHeadingLevel,y=c??g.tableOfContents.maxHeadingLevel,f=function({toc:e,minHeadingLevel:t,maxHeadingLevel:n}){return(0,o.useMemo)((()=>i({toc:l(e),minHeadingLevel:t,maxHeadingLevel:n})),[e,t,n])}({toc:e,minHeadingLevel:h,maxHeadingLevel:y});return u((0,o.useMemo)((()=>{if(n&&s)return{linkClassName:n,linkActiveClassName:s,minHeadingLevel:h,maxHeadingLevel:y}}),[n,s,h,y])),o.createElement(m,(0,a.A)({toc:f,className:t,linkClassName:n},d))}},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);